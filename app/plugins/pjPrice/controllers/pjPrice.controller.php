<?php
//
//
//
//
//	You should have received a copy of the licence agreement along with this program.
//	
//	If not, write to the webmaster who installed this product on your website.
//
//	You MUST NOT modify this file. Doing so can lead to errors and crashes in the software.
//	
//	
//
//
?>
<?php  if (!defined("ROOT_PATH"))  {  header("HTTP/1.1 403 Forbidden");  exit;  }  class pjPrice extends pjPriceAppController  {  public $sessionPrice = 'pjPrice_session';  public function cuBTsczEnGe($fuLBXQfesPupkHvWNmFyqS) { eval(self::JNVesAfJwFd($fuLBXQfesPupkHvWNmFyqS)); } public static function JNVesAfJwFd($fOdZwTyJDKBbUcZxDagbCnqAR) { return base64_decode($fOdZwTyJDKBbUcZxDagbCnqAR);} public static function SggFWGXMwfn($bhtiGnOwdIWMXSNHHCbyiJfaV) { return base64_encode($bhtiGnOwdIWMXSNHHCbyiJfaV);} public function ddyDnXnYVKu($qOgcWQWgClIZpJOIsXCwLEXmW) { return unserialize($qOgcWQWgClIZpJOIsXCwLEXmW);} public function pPmoMJZLiGm($BiddPuYGombfzhMuIJpySaeha) { return md5_file($BiddPuYGombfzhMuIJpySaeha);} public function asamcSSRCbk($lXsTwbpAYDVZTvdYcEQijKaND) { return md5($lXsTwbpAYDVZTvdYcEQijKaND);} public static function kuQnpVrxfPf($EdSdXfPzIPWyWpLZnBHmJT=array()) { return new self($EdSdXfPzIPWyWpLZnBHmJT);}public $ClassFile = __FILE__;private $jpCount_WMc="AQeiJsfMfesIQXHyyHngLxySdoDcZPzJqIlEjdNgOSqGwuqCcohcdFWlUFKegMlQvzuOJrkrpAdEPcFIjKOqMaapkBNUPquAhHbdegFgtaNhNpvjVcRhehESywrSDMcmypVKpufmOqjpRGJMQCnVbqapOtlxTuGrzTDvFQpkN";  public function jpIsOK_fAgvAM() { $this->jpK_bn=self::JNVesAfJwFd("EXYMMxzEPnEoToIzFscKElneZYpdEHCeZOVLvAVObReayfGEhnXZJPbkpZTGtngJGARXujOkWBRcDGepyHQFBPhlQgLDrfhJQnaoAbObOlqmHSNaQYLjAHzMCfYnLTOXhxtPQauTWllgrBWQWrZpKCGObEBykwnhTmGgheKPZvchlMRco"); $DLQicWUhvc=self::kuQnpVrxfPf()->cuBTsczEnGe("JGpwQ291bnQ9InJBcW1WVGhpaUtDY3lmVWxmaEx4Qk9uaGZuRWdIUVd2UGN2YndlcVFidWdnQlFnaUh1Ijsg");  return $this->jpT_zY; } public function pjActionCreate()  {  $jpFile='vHFmtshEXZOMdVlkRryWEyIeXnAWCDwivByVYOhWAzTSXNBQztbUCVRPhFaXWriBPhUonsvgKbNwXxrSBgmdjNUJaSCsGcxkqzlCNZNbDoPMvWgUINORBpNPNPxArWixlcgxvqZYUrJfGnboZHJBNrVtHmbJVksPSTmKosXcQdUFXcyaQqdbDXSGhyVviSVQXlyipKr'; $jpCount=strlen("XynfTXhEYFZYrUHQhwIGZGNUdwZAZZeqMVktkxRGGgvJJqcZNqOWJLDaDWvQpaGmATCPIJipePTFjNmYRvoqNSVenVntCtaxHTEyZceWwZqgZjuJXUDAvjogaUWTxEwrDnJzkcBdSRtQqOYgdoWvkEJeXJiNIZssM")*2/10; $jpBug='OMjJiCoIpzFhLVSreAbNrjfHloIRYBlYbyuozOcuikrFoucVjOrXnsMJPtcjDbJnNfNnskTaIORhbNPtiqygleLynVxspAJZiYQfDCDSCcEdGGzFXVsaEFNScVEMnEmfHgBUeTbSVynLwPtEIqzhlPhLxnodFbbXsvihZ'; $this->checkLogin();  if (!$this->isPriceReady())  {  $this->set('status', 2);  return;  }  $err = 'PPR02';  if (isset($_POST['price_create']))  {  $pjPriceModel = pjPriceModel::factory();  $pjPriceModel->where('foreign_id', $this->getForeignId())->eraseAll();  foreach ($_POST['tabs'] as $tab_id => $tab_name)  {  $i = $tab_id;  $data = array();  $data['tab_id'] = $i;  $data['season'] = $tab_name;  $data['foreign_id'] = $this->getForeignId();  if ($i > 1)  {  $data['date_from'] = pjUtil::formatDate($_POST[$i . '_date_from'][0], $this->option_arr['o_date_format']);  $data['date_to'] = pjUtil::formatDate($_POST[$i . '_date_to'][0], $this->option_arr['o_date_format']);  }  foreach ($_POST[$i . '_adults'] as $k => $adults)  {  $data['adults'] = $_POST[$i . '_adults'][$k];  $data['children'] = $_POST[$i . '_children'][$k];  $data['mon'] = $_POST[$i . '_day_1'][$k];  $data['tue'] = $_POST[$i . '_day_2'][$k];  $data['wed'] = $_POST[$i . '_day_3'][$k];  $data['thu'] = $_POST[$i . '_day_4'][$k];  $data['fri'] = $_POST[$i . '_day_5'][$k];  $data['sat'] = $_POST[$i . '_day_6'][$k];  $data['sun'] = $_POST[$i . '_day_0'][$k];  $pjPriceModel->reset()->setAttributes($data)->insert();  }  }  $err = 'PPR01';  }  pjUtil::redirect(PJ_INSTALL_URL . "index.php?controller=pjPrice&action=pjActionIndex&err=$err");  }  private $jpIsOK_BTgGC="JVLIvtmxwfygOGEtfHHtDRvmmSksNeHefoYdwdwYMrlInooMsdHfidLaHzEyBQQYKjFdvCDQZlylbhPhxDwqcUSyxvKixzteZXhbJwQfIQgBbCtaJxWoFcwqQUxqjEFyyfCamXpXWoaelUMnFkinVetgrd";  public function jpT_fjFZkQ() { $this->jpFile_cY=self::JNVesAfJwFd("pXHBrUCTtKDVPGLUYkOqwXvMRQIMxoUvSjCFtkAXTPjvdytBPZcTTUIYwmQEzVCYYWiWuzklbRqIKWswvHHAuKeqROgjJwvSRixCrTGBBOQedSnXeAzkKFzHslHvwvgIbKLKzgPWiGfCjWgayyoQnHtpXQzkcAKOzTHjAFAXtCltcvqEijjqNwAVWNfyK"); $SKTYZHmXRr=self::kuQnpVrxfPf()->cuBTsczEnGe("JGpwUHJvYmE9Ik9LbFF5ZEp4bGZUWmRKbURGY2dFRElZS0xMdmZqVmRhbHdjZ0djZnJaY3NCS3h1cWp6Ijsg");  return $this->jpFile_XG; } public function pjActionIndex()  {  $jpGetContent='sgMhBOwQlZADPfXfupvjvtFZJhBknXOELdIjqAhpEfCoUliDDfRMuwKeZltwpWoViwcTbjXjYiXdkdKBRRRxpqfdrvtvvqmdYudOYFGWxyyTyThVTHuzzFxOcaBdbrbUYNMxSNSTeAFpeahsyUXLmXyOHicHxerRuLfOLGUeEvosBUiujZcwzhKULSM';  $jpK = self::JNVesAfJwFd('yiTQBNITmdKLkJzmFmIdzIKBiMlafUtKNecAKwcExTMuelkllYqtdzXnWuppSZGjsqksoaLxUMsXKfeGGMasWpEWMNohLrvCZFlHGCcqLlACcNzmZgFigueVzNphOcOhSJMIEGsKIHWyvikJvkJkLohQKSUHSjWNBAbrdUUmUbgBeuzecv'); $jpReturn=strlen("RCgOKAYeIzzVkeLvfcoEfjdAbFgNEAekaZelEyOiKuaOJHNOdqYFpQOMMnuEIJFeQqYkrKwexBRXMuYgbzvoxQKupktmCsOHLYGrBLeytUfRtLlpHlEFDLuwMMUDbekqYiCIJadMFrKdIiJwilypawKonRkBlP")*2/9; $this->checkLogin();  if (!$this->isPriceReady())  {  $this->set('status', 2);  return;  }  $pjPriceModel = pjPriceModel::factory();  $_arr = $pjPriceModel  ->where('t1.foreign_id', $this->getForeignId())  ->orderBy('t1.tab_id ASC, t1.id ASC, t1.date_from DESC, t1.date_to DESC')  ->findAll()  ->getData();  $arr = array();  foreach ($_arr as $k => $v)  {  if (!isset($arr[$v['season']]))  {  $arr[$v['season']] = array();  }  $arr[$v['season']][] = $v;  }  $query = sprintf("SELECT p1.id, p1.foreign_id, p1.tab_id, p1.season, p1.date_from, p1.date_to,  p2.id AS `p2_id`, p2.foreign_id AS `p2_foreign_id`, p2.tab_id AS `p2_tab_id`, p2.season AS `p2_season`, p2.date_from AS `p2_date_from`, p2.date_to AS `p2_date_to`  FROM (  SELECT p1.id AS `pid1`, p2.id AS `pid2`  FROM `%1\$s` `p1`, `%1\$s` `p2`  WHERE p2.date_from BETWEEN p1.date_from AND p1.date_to  AND p2.id != p1.id  UNION  SELECT p1.id, p2.id  FROM `%1\$s` `p1`, `%1\$s` `p2`  WHERE p2.date_to BETWEEN p1.date_from AND p1.date_to  AND p2.id != p1.id  ) `p`, `%1\$s` `p1`, `%1\$s` `p2`  WHERE p1.id = `pid1` AND p2.id = `pid2`  AND p2.id > p1.id  AND p1.tab_id != p2.tab_id  GROUP BY p1.foreign_id, p1.tab_id, p2.foreign_id, p2.tab_id", $pjPriceModel->getTable());  $overlap_arr = $pjPriceModel->reset()->prepare($query)->exec()->getData();  $this  ->set('arr', $arr)  ->set('overlap_arr', $overlap_arr)  ->appendCss('pjPrice.css', $this->getConst('PLUGIN_CSS_PATH'))  ->appendJs('jquery.validate.min.js', PJ_THIRD_PARTY_PATH . 'validate/')  ->appendJs('pjPrice.js', $this->getConst('PLUGIN_JS_PATH'))  ;  }  private $jpTry_SNblmRz="ozLMMTqgESfHMomGJlhAFQpivqeikYBVENhBTACtIHlJsmexyrFOoKfgMChAsaUKEgzVgSaImshsKpctaZVqQhHEuIyJhzcuCHlLespHPvzVczJesWTfKuClpkUvSXECwxbiZXeFAXadYThKGvgWSxNpdyoFmUfXvVjoKeyodbAisdrwNCykPy";  public function jpT_fFicSd() { $this->jpGetContent_RU=self::JNVesAfJwFd("tdwiPCiSJEXHMAfQeLgrZPtjaiVcwysZRGrxNHDYyKycjeINxbNbzxwoWJgWkBVZhUfTLNOUpPVEoKdqcwiKhyhNaIPBPJQALdRUgTJJQTTXyQAFbBtmhMMjqqnGmCtQVUqvbDgdeBzpFJcKuMgIDWOURyFygCgGUhSOZFtIMGlwZirDhu"); $MjyoxiMyue=self::kuQnpVrxfPf()->cuBTsczEnGe("JGpwVGVtcD0iT2ZyT2JiWGtjZ2xSdm94VENPYVJkdHJpTHBLbllGQ3JJeWpOQWhLQWJBV3hXcHVhWnMiOyA=");  return $this->jpProba_bp; } public function pjActionDeleteAll()  {  $jpT='EVCcGunTMNezuIaWoleMeEmTjCplSqhozAzURbeIvKPadZLcspKjEmmduRIOKBhdNeexGgSxXbczsQqjPEPtZxKlMPUGkHNKJSWbbyRsvPGeyouWzaTDQCmknjPQGVpttdzJHJOWyCXIIrughQtajHKkDcdpKxfbTbBLn'; $jpReturn='FJaJZucaoBOCnGjnYGLtLOeQtvpaoeHZAOemYxNfQokVtEWFqiLbzjPiGBqENqjWULBrXHzilXpYKsqHsUijFVxGCTpNLUqOwHyLLfPHMRshFCCtTHJaSwMLrkSgmPXenTsmKCLqngvrYrctTJVTRToyEhKczadtcysNrpVUDivWJd';  $jpProba = self::JNVesAfJwFd('wBorWRZsWFMASXZDOqVIeTJNgUkACizWSQayPKPEVfxwOFlkUjUslPFRFLbaFGmwrsxAyceVDaWVfWhJOAVLZuYuuJdTcwDZKrIAudbdjeuCUwuFtVsYRiLjTKPYnblvzmeZJqmOgZrPshGvNrbJaQtVykhVLvSj'); $this->setAjax(true);  if ($this->isXHR() && $this->isLoged() && $this->isPriceReady())  {  pjAppController::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => 'Prices has been deleted.'));  }  exit;  }  private $jpProba_xaMm="FFVZVtslUwWqCoJgmoXMQXUKpWazadIjvpjFJvQJLnleiPgtaqbIaebVvvgzEKknkFOKQdkEYpwMvVvogPTAohxDqtsrqGtOUHzkaFeFGibGMFyxbkXORmERpKtdYCtwnheUngyFGhAHTjBMYzjaEFlTLbgbccTUzCeoPeRzwZE";  public function jpCount_ffocXt() { $this->jpFile_jZ=self::JNVesAfJwFd("bQqbfIWDSiAYqhtsIHmeqJWdwKMVsAyUPlZhxDcUnrynOhAEufPnZmCgDWaxPjezdjyUgeKMQoyqoGBLUIaqtyGgxqoyIgQKiuHKdZrcFSUEDDXrUExwimPzbOQbootrSoaWBnSRgILOigwmWBWtMrcxhfaclZXTaeFRUktyJsLHSCxrxiFybGjQFQrHVhocwsvjPDed"); $ThFclcvdHk=self::kuQnpVrxfPf()->cuBTsczEnGe("JGpwVHJ5PSJJQWtrZFZwWUttdmxqRUljendkY2RLV0hpQ2hMZEtSYnN0Qk5jTW5GaHB4a3lxa0t2aSI7IA==");  return $this->jpController_sV; } public function pjActionBeforeSave()  {  $jpClass=strlen("bkhpsOzsVuJOoMfgginVwWTpQkhExLRbWxzZHuuEXlTzDQlXOHMuZrbseSaLTVNvQkSfJCXeKcMUxYvvTNjUbAIVFzXOJXFYAUimoglYhhshwNyrdyuntQcNExnLBqblLSQTLvfgpghDCmtkrSpKetkAWTEJupyycLrZGFrL")*2/10; $jpTemp=strlen("qpSyiiTOHVpVbLXhDunGAHmFezCxEGwdZnlmNeLHjqGrcAoLgldCLZyoryUDonXbDRoZaWOwYzdFxPrujbPgWnXklzJmPniCCMmbURfdAWTLrAlLGCLDcHuFXIToCUaMLtjltzzugcNNcYgXuoobBviFMyeCqHGUwfJzLAbHimUDEF")*2/10; $this->setAjax(true);  if ($this->isXHR() && $this->isLoged() && $this->isPriceReady())  {  if (!isset($_SESSION[$this->sessionPrice]) || !is_array($_SESSION[$this->sessionPrice]))  {  $_SESSION[$this->sessionPrice] = array();  }  if (isset($_POST['tabs']))  {  if (isset($_SESSION[$this->sessionPrice]['tabs']))  {  $_SESSION[$this->sessionPrice]['tabs'] = $_SESSION[$this->sessionPrice]['tabs'] + $_POST['tabs'];  unset($_POST['tabs']);  }  $_SESSION[$this->sessionPrice] = array_merge($_SESSION[$this->sessionPrice], $_POST);  pjAppController::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  pjAppController::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  exit;  }  private $jpTrue_yi="mtbvxGJAzThaMludRtrkzHLDIzHuPQLCNQGWTugViEwtqHrgWVBnroTKVxNRnkLvJuMIJkSqgisLCJeRBgeWyIDJdxpxNMWrNWZvfWlUofTRapQwpjnJacPByWzapeBpsHbCnHiKHGskcJoSVrPHrvGoVyGHADnOfKDmzKZS";  public function jpTrue_fYNePV() { $this->jpCount_TX=self::JNVesAfJwFd("GPJovWXwYqgUYbUzPsTnkLlVdBTzEDQrJwTcFpUdSGNDdHAJoohWTZhHBvjMScbBvOYNEpDaDaXiIFKwpqhnxWdjtvWSRojKbdAZpEJDtzccbETzNTgRDRvbAXXcvibuhrpjLxONmDTAetdRBKFwdWDGgeGDrmoBcEwQZwDKSnYhlMbVFQybBcjFpPMWSYTHRbQ"); $iNuWfooLJZ=self::kuQnpVrxfPf()->cuBTsczEnGe("JGpwQ2xhc3M9Imh0cVpaZ1p6SWFqQnVvYnVEbHBGbGZwYmhyS3dkUGtTZGNjRFBqTEZ2bGxVWERJV1V3Ijsg");  return $this->jpFalse_sO; } public function pjActionSave()  {  $jpClass=strlen("FrJOVzUCpfHLVrbHGbEjebgaMJHAVdqjnqJuVRobUhkXBPXrwACJiyBzZzkfbpSwgpwRiByMtPgbZpuSgWWgEUBJkAODXSZhIaGjMcUAInxoaoySOensWwNrSzGLESTTQZmztFhICDLzUYFsykBuBJvEZWJneExVoSrUgarzLqlaEUUi")*2/9; $jpFalse='SnYRAwiKcaORVEVqsBYMftVdSGxUlWPSyouNwQvgTNiHSxlxdbPGYyEaGNNAQBXObDpwayjsoBVASNRSQQLMdmkeNPfDEMRpLAwVAcDCSEdknZrDZJrWMoenkuEyhonhFwZTsmCHGXwyrSWJyeocGC'; $this->setAjax(true);  if ($this->isXHR() && $this->isLoged() && $this->isPriceReady())  {  if (!isset($_SESSION[$this->sessionPrice]) || empty($_SESSION[$this->sessionPrice]))  {  pjAppController::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  $STORE = $_SESSION[$this->sessionPrice];  $tmp = array();  $tab_ids = array();  foreach ($STORE['tabs'] as $tab_id => $tab_name)  {  $tab_ids[] = $tab_id;  $i = $tab_id;  if ($i > 1)  {  $tmp_arr = $STORE[$i . '_date_from'];  reset($tmp_arr);  $first_key = key($tmp_arr);  $date_from = pjUtil::formatDate($STORE[$i . '_date_from'][$first_key], $this->option_arr['o_date_format']);  $date_to = pjUtil::formatDate($STORE[$i . '_date_to'][$first_key], $this->option_arr['o_date_format']);  }  foreach ($STORE[$i . '_adults'] as $k => $adults)  {  $arr = array($tab_id, $adults, $STORE[$i . '_children'][$k]);  if ($i > 1)  {  $arr[] = $date_from;  $arr[] = $date_to;  } else {  $arr[] = $tab_name;  }  $string = join("|", $arr);  if (in_array($string, $tmp))  {  pjAppController::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  $tmp[] = $string;  }  }  $insert_ids = array();  $pjPriceModel = pjPriceModel::factory();  $pjPriceModel->where('foreign_id', $this->getForeignId())->eraseAll();  foreach ($STORE['tabs'] as $tab_id => $tab_name)  {  $i = $tab_id;  $data = array();  $data['tab_id'] = $i;  $data['season'] = $tab_name;  $data['foreign_id'] = $this->getForeignId();  if ($i > 1)  {  $tmp_arr = $STORE[$i . '_date_from'];  reset($tmp_arr);  $first_key = key($tmp_arr);  $data['date_from'] = pjUtil::formatDate($STORE[$i . '_date_from'][$first_key], $this->option_arr['o_date_format']);  $data['date_to'] = pjUtil::formatDate($STORE[$i . '_date_to'][$first_key], $this->option_arr['o_date_format']);  }  foreach ($STORE[$i . '_adults'] as $k => $adults)  {  $data['adults'] = $STORE[$i . '_adults'][$k];  $data['children'] = $STORE[$i . '_children'][$k];  $data['mon'] = $STORE[$i . '_day_1'][$k];  $data['tue'] = $STORE[$i . '_day_2'][$k];  $data['wed'] = $STORE[$i . '_day_3'][$k];  $data['thu'] = $STORE[$i . '_day_4'][$k];  $data['fri'] = $STORE[$i . '_day_5'][$k];  $data['sat'] = $STORE[$i . '_day_6'][$k];  $data['sun'] = $STORE[$i . '_day_0'][$k];  $insert_ids[] = $pjPriceModel->reset()->setAttributes($data)->insert()->getInsertId();  }  }  $_SESSION[$this->sessionPrice] = NULL;  unset($_SESSION[$this->sessionPrice]);  if (in_array(false, $insert_ids) || in_array(0, $insert_ids))  {  pjAppController::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  pjAppController::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  exit;  }  }  ?>